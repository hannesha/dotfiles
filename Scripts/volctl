#!/usr/bin/env python3
import subprocess
import notify2
import argparse
import re

def get_icon(muted, volume):
	if muted:
		return 'audio-volume-muted'

	level = int(volume/33)
	icon = 'audio-volume-low'
	if level == 1:
		icon = 'audio-volume-medium'
	elif level >= 2:
		icon = 'audio-volume-high'

	return icon

notify2.init('volctl')
parser = argparse.ArgumentParser()
parser.add_argument('command', default='status', nargs='?', choices=['status', 'up', 'down', 'toggle'])
args = parser.parse_args()

master = '@DEFAULT_AUDIO_SINK@'

mixer_exe = 'wpctl'
status_cmd = [mixer_exe, 'get-volume', master]

set_volume = 'set-volume'
set_mute = 'set-mute'

if args.command == 'status':
	command = status_cmd
elif args.command == 'up':
	command = [mixer_exe, set_volume, master, '1%+']
elif args.command == 'down':
	command = [mixer_exe, set_volume, master, '1%-']
elif args.command == 'toggle':
	command = [mixer_exe, set_mute, master, 'toggle']


subprocess.check_output(command)
mixer_info = subprocess.check_output(status_cmd)

m = re.search(r'0.([0-9]+)', mixer_info.decode())
# print(m)

vol = int(m[1])
muted = b'[MUTED]' in mixer_info

icon = get_icon(muted, vol)

n = notify2.Notification('Volume', '{}%'.format(vol), icon)
n.set_hint('value', vol)
n.set_urgency(notify2.URGENCY_LOW)
n.set_timeout(400)
n.show()
